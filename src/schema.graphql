scalar DateTime

enum SortDirection {
  ASC
  DESC
}
# inputs----------------
input CreateUserInput {
  email: String!
  name: String!
  nickname: String!
  password: String!
}
# end of inputs----------

input OrderByInput {
  field: String!
  direction: SortDirection!
}

input FilterInput {
  limit: Int
  offset: Int
  publisher: String
  orderBy: OrderByInput
}
input ComicsInput {
  filter: FilterInput
}
# types ----------------

type Comic {
  id: ID!
  name: String!
  person_credits: [String]
  description: String!
  image: String!
  issue_number: Int
  cover_date: DateTime
  volume: Int
  publisher: String
}

type User {
  id: ID!
  email: String!
  name: String!
  nickname: String!
  favoriteComics: [Comic!]
}

# end of types -----------

type Query {
  user: User!
  comic(id: ID!): Comic!
  comics(comicsInput: ComicsInput!): [Comic!]!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
}
